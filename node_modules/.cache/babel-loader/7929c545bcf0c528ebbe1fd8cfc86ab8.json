{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avile\\\\Desktop\\\\facerecoapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('https://quiet-coast-72156.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://quiet-coast-72156.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), \"    \", React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), \"   \", route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), \"    \", React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), \"    \", React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \"   \") : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/avile/Desktop/facerecoapp/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\nconst particlesOptions = {\r\n    particles: {\r\n        number: {\r\n            value: 30,\r\n            density: {\r\n                enable: true,\r\n                value_area: 800\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    input: '',\r\n    imageUrl: '',\r\n    box: {},\r\n    route: 'signin',\r\n    isSignedIn: false,\r\n    user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = initialState;\r\n    }\r\n\r\n    loadUser = (data) => {\r\n        this.setState({\r\n            user: {\r\n                id: data.id,\r\n                name: data.name,\r\n                email: data.email,\r\n                entries: data.entries,\r\n                joined: data.joined\r\n            }\r\n        })\r\n    }\r\n\r\n    calculateFaceLocation = (data) => {\r\n        const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n        const image = document.getElementById('inputimage');\r\n        const width = Number(image.width);\r\n        const height = Number(image.height);\r\n        return {\r\n            leftCol: clarifaiFace.left_col * width,\r\n            topRow: clarifaiFace.top_row * height,\r\n            rightCol: width - (clarifaiFace.right_col * width),\r\n            bottomRow: height - (clarifaiFace.bottom_row * height)\r\n        }\r\n    }\r\n\r\n    displayFaceBox = (box) => {\r\n        this.setState({ box: box });\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    }\r\n\r\n    onButtonSubmit = () => {\r\n        this.setState({ imageUrl: this.state.input });\r\n        fetch('https://quiet-coast-72156.herokuapp.com/imageurl', {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    input: this.state.input\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response) {\r\n                    fetch('https://quiet-coast-72156.herokuapp.com/image', {\r\n                            method: 'put',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({\r\n                                id: this.state.user.id\r\n                            })\r\n                        })\r\n                        .then(response => response.json())\r\n                        .then(count => {\r\n                            this.setState(Object.assign(this.state.user, { entries: count }))\r\n                        })\r\n                        .catch(console.log)\r\n\r\n                }\r\n                this.displayFaceBox(this.calculateFaceLocation(response))\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onRouteChange = (route) => {\r\n        if (route === 'signout') {\r\n            this.setState(initialState)\r\n        } else if (route === 'home') {\r\n            this.setState({ isSignedIn: true })\r\n        }\r\n        this.setState({ route: route });\r\n    }\r\n\r\n    render() {\r\n        const { isSignedIn, imageUrl, route, box } = this.state;\r\n        return ( <\r\n            div className = \"App\" >\r\n            <\r\n            Particles className = 'particles'\r\n            params = { particlesOptions }\r\n            />    <\r\n            Navigation isSignedIn = { isSignedIn }\r\n            onRouteChange = { this.onRouteChange }\r\n            />   {\r\n            route === 'home' ?\r\n            <\r\n            div >\r\n            <\r\n            Logo / >\r\n            <\r\n            Rank name = { this.state.user.name }\r\n            entries = { this.state.user.entries }\r\n            />    <\r\n            ImageLinkForm onInputChange = { this.onInputChange }\r\n            onButtonSubmit = { this.onButtonSubmit }\r\n            />    <\r\n            FaceRecognition box = { box }\r\n            imageUrl = { imageUrl }\r\n            />   < /\r\n            div > : (route === 'signin' ? <\r\n                Signin loadUser = { this.loadUser }\r\n                onRouteChange = { this.onRouteChange }\r\n                />  : <\r\n                Register loadUser = { this.loadUser }\r\n                onRouteChange = { this.onRouteChange }\r\n                />\r\n            )\r\n        } < /div>\r\n    );\r\n}\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}